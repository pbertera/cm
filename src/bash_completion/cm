#. cmlib
. ${__cm_lib_dir}/cmlib

# $1 = dir to list
__cm_complete_node()
{
	local root alldir base
	cur="${COMP_WORDS[COMP_CWORD]}"
	if [ -z "$1" ]; then
		root="$__cm_libexec_dir"
	else
		root="${1}"
	fi
	
	COMPREPLY=()
	
	alldir=" "
	for dir in "$root"/*; do	
		base=$(basename "$dir")
		[ "${base:0:1}" != "_" ] && alldir="$alldir $base"
	done
	COMPREPLY=($(compgen -W "$alldir" -- "$cur" ))
	return 
}

__cm_complete_leaf()
{
	local dirname filename command cur complete
	dirname=$(dirname $1)
	filename=$(basename $1)
	command="${dirname}/_${filename}_complete"
	#local IFS=$'\n'
	COMPREPLY=()
	cur="${COMP_WORDS[COMP_CWORD]}"
	if [ -f "${dirname}/_${filename}_nocomplete" ]; then
		echo 
		eval $command
		echo -n "${__cm_prompt}${COMP_WORDS[@]}"
		return
	fi
	if [ -x "$command" ]; then
		complete=$($command) #TODO: fix complete for nocm command
		COMPREPLY=($(compgen -W "$complete" -- "$cur"))
	fi
}

__cm_complete()
{
	local cur prev __cm_root_all path command
	cur=${COMP_WORDS[COMP_CWORD]}
	prev=${COMP_WORDS[COMP_CWORD-1]}

	opts=${COMP_WORDS[@]:1}
	prev_opts=${COMP_WORDS[@]:1:$((${#COMP_WORDS[@]} - 2))}
	#COMPREPLY=()
	if [ "$prev" == "cm" ]; then
		COMPREPLY=($(compgen -W "$(__cm_list_node)" -- "$cur" ))
		return
	fi
	
	__cm_is_command_node $opts
	if [ "$?" == "0" ]; then
		COMPREPLY=($(compgen -W "$(__cm_list_node $opts)" -- "$cur" ))
		return
	fi
	# prev is a node
	__cm_is_command_node $prev_opts
	if [ "$?" == "0" ]; then
		COMPREPLY=($(compgen -W "$(__cm_list_node $prev_opts)" -- "$cur" ))
		return
	fi

	echo "NOT FOUND"
	#return 0
}

complete -F __cm_complete cm
complete -F __cm_complete dcm
complete -F __cm_complete nocm
complete -F __cm_complete dnocm
