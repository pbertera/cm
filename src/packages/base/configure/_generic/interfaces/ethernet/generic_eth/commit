#!/bin/bash

# apply configuration in db to system
# @param $1: interfaces		statical part of command
# @param $2: ethernet		statical part of command
# @param $3: ethx		ethernet device
# @param $4: commit		statical part of command

. ${__cm_lib_dir}/cmlib

command=$(__cm_command $@)
command_path=$(__cm_command_path $@)
param=$(__cm_command_param $@)
command_path_dir=$(__cm_command_path_dir $@)
command_name=$(__cm_command_name $@)

if [ $__cm_no_command ]; then
	__cm_db_remove_leaf interfaces ethernet $3 commit
	exit 0
fi

dhcp4=$(__cm_db_get_leaf $1 $2 $3 dhcp4 2>/dev/null)

if [ -n "$dhcp4" ]; then
	_cm_dhclient stop $3
	_cm_dhclient start $3
	exit 0
fi

#get information from db
config_ip=$(__cm_db_get_leaf $1 $2 $3 address4) #ip + netmask
state=$(__cm_db_get_leaf $1 $2 $3 state)
current_ip=$(ip -o addr | grep "inet " |grep $3 | cut -d\  -f 7)

addr_to_add=
for addr in $config_ip; do
	found=$(expr match "$current_ip" ".*${addr//./\\.}.*")
	[ "$found" == "0" ] && addr_to_add="$addr_to_add $addr"
done

addr_to_rem=
for addr in $current_ip; do
	found=$(expr match "$config_ip" ".*${addr//./\\.}.*") 
	[ "$found" == "0" ] && addr_to_rem="$addr_to_rem $addr"
done


for addr in $addr_to_rem; do
	ip addr del $addr dev $3
done

for addr in $addr_to_add; do
	ip addr add $addr dev $3
done

# activate interface
[ "$state" == "active" ] && ip link set up dev $3

# deactivate interface
[ "$state" == "inactive" ] && ip link set down dev $3

#insert a leaf in db with no value
__cm_db_set_leaf "" interfaces ethernet $3 commit
