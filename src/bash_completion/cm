#!/bin/bash
#. cmlib
. ${__cm_lib_dir}/cmlib

__cm_complete_leaf()
{
	local dirname filename command cur
	dirname=$(dirname $__cm_complete_path)
	filename=$(basename $__cm_complete_path)
	command="${dirname}/_${filename}_complete"
	#local IFS=$'\n'
	COMPREPLY=()
	cur="${COMP_WORDS[COMP_CWORD]}"
	if [ -f "${dirname}/_${filename}_nocomplete" ]; then
		echo 
		eval $command
		echo -n "${__cm_prompt}${COMP_WORDS[@]}"
		return
	fi
	if [ -x "$command" ]; then
		COMPREPLY=($(compgen -W "$($command)" -- "$cur"))
	fi
}

__cm_complete_tag()
{
	local command cur
	COMPREPLY=()
	cur="${COMP_WORDS[COMP_CWORD]}"
	
	if [ "$(basename $__cm_complete_path)" == "_tag" ]; then # tag terminated
			COMPREPLY=($(compgen -W "$(__cm_list_node $*)" -- "$cur" ))
			return
	fi
	
	command="${__cm_complete_path}/_tag_complete"
	if [ -f "${__cm_complete_path}/_tag_nocomplete" ]; then
		echo
		eval $command
		echo -n "${__cm_prompt}${COMP_WORDS[@]}"
		return
	fi
	
	if [ -x "${__cm_complete_path}/_tag_complete" ]; then
		COMPREPLY=($(compgen -W "$($command)" -- "$cur"))
		return
	fi
}

__cm_complete()
{
	local opts prev_opts cur
		
	__cm_complete_path=
	cur=${COMP_WORDS[COMP_CWORD]}
	opts=${COMP_WORDS[@]:1}
	prev_opts=${COMP_WORDS[@]:1:$((${#COMP_WORDS[@]} - 2))}
	COMPREPLY=()
		
	__cm_complete_path=$(__cm_command_path $prev_opts)
	
	if [ "$COMP_CWORD" == "1" ]; then
		COMPREPLY=($(compgen -W "$(__cm_list_node)" -- "$cur" ))
		return
	fi
	
	
	# command is a tag
	__cm_is_command_tag $opts
	if [ "$?" == "0" ]; then
		__cm_complete_tag $opts
		return
	fi

	# command is a node	
	__cm_is_command_node $opts
	if [ "$?" == "0" ]; then
		COMPREPLY=($(compgen -W "$(__cm_list_node $opts)" -- "$cur" ))
		return
	fi

	# previous command is a node
	__cm_is_command_node $prev_opts
	if [ "$?" == "0" ]; then
		COMPREPLY=($(compgen -W "$(__cm_list_node $prev_opts)" -- "$cur" ))
		return
	fi
	
	# previous command is a tag
	__cm_is_command_tag $prev_opts 
	if [ "$?" == "0" ]; then
		#__cm_complete_tag $prev_opts
		COMPREPLY=($(compgen -W "$(__cm_list_node $prev_opts)" -- "$cur" ))
		return
	fi

	# previous command is a leaf
	if __cm_is_command_leaf $prev_opts; then
		__cm_complete_leaf $prev_opts
		return
	fi

	# command is a leaf
	if __cm_is_command_leaf $opts; then
		COMPREPLY=()
		return
	fi	
	
}

complete -F __cm_complete cm
complete -F __cm_complete dcm
complete -F __cm_complete nocm
complete -F __cm_complete dnocm
